#include <iostream>

using namespace std;

class Matriz {
    protected:
        int **matrix;
        int linha, coluna;

    private:
        void allocate_function(int linha, int coluna, int ***matriz){ //função para alocar memória dinamicamente
            int **mat;
            mat = new int *[linha];
            for (int i = 0; i < linha; i++){
                mat[i] = new int [coluna];
            }
            *matriz = mat;
       }

       void deallocate_function(int **matriz){ //função para desalocar memória
            for (int i = 0; i < coluna; i++){
                delete[] matrix[i];
            }
            delete[] matrix;
       }

    public:
        Matriz(int linha, int coluna) { //construtor para alocação dinâmica

            this->coluna = coluna;
            this->linha = linha;

            allocate_function(linha, coluna, &matrix);

        }


        Matriz (Matriz &matriz_referencia){ //construtor por cópia de outro objeto

            this->linha = matriz_referencia.linha;
            this->coluna = matriz_referencia.coluna;

            allocate_function(linha, coluna, &matrix);
            for (int i = 0; i < linha; i++){
                for(int j = 0; j < coluna; j++){
                    matrix[i][j] = matriz_referencia[i][j];
                }
            }

        }
        ~Matriz(){ //destrutor de objetos
            deallocate_function(matrix);
            cout << "Matriz destruida!!" << endl;
        }

        int *operator[] (int x) { //Overload do operador [] para acesso direto aos valores da matriz
            return matrix[x];

        }

        Matriz &operator= (Matriz &matriz){ //Overload do operador = que permite igualar dois objetos diretamente

            int lin = matriz.linha;
            int col = matriz.coluna;

            deallocate_function(matrix);
            allocate_function(lin, col, &matrix);

            for (int i = 0; i < lin; i++){
                for(int j = 0; j < col; j++){
                    matrix[i][j] = matriz[i][j];
                }
            }
            this->linha = lin;
            this->coluna = col;
            return *this;
        }

        int getLinha(){ //método para obter o número de linhas da matriz
            return linha;
        }

        int getColuna(){ //método para obter o número de colunas da matriz
            return coluna;
        }


    };


void valores (Matriz &mat){ //recebe a matriz e a preenche
    int linha = mat.getLinha();
    int coluna = mat.getColuna();

    int i, j;

    for(i = 0; i < linha; i++){
        for(j = 0; j < coluna; j++){
            cin >> mat[i][j];
        }
    }
}

void impressao (Matriz &mat){//recebe a matriz e a imprime
    int i, j;
    int linha = mat.getLinha();
    int coluna = mat.getColuna();

    for(i = 0; i < linha; i++){
        for(j = 0; j < coluna; j++){
            cout << mat[i][j] << " ";
        }
        cout << endl;;
    }
}
int main()
{
    int lin1, col1, lin2, col2;		

	cout << "Este programa recebe e imprime uma matriz!" << endl; //menu com opcões para o usuário testar os métodos e funções
	cout << "\n";

	cout << "Insira o numero de linhas e colunas da matriz 1, respectivamente: ";
	cin >> lin1 >> col1;
	Matriz mat_objeto1(lin1, col1);
    	cout << "Insira os valores da matriz 1: " << endl;
	valores(mat_objeto1);

	cout << "Insira o numero de linhas e colunas da matriz 2, respectivamente: ";
	cin >> lin2 >> col2;
	Matriz mat_objeto2(lin2, col2);
	cout << "Insira os valores da matriz 2: " << endl;
    	valores(mat_objeto2);
	cout << endl;

	Matriz mat_objeto_copia(mat_objeto1);

    	cout << endl;
	
    	cout << "Matriz 1:" << endl;;
    	impressao(mat_objeto1);
    	cout << endl;
	
    	cout << "Matriz 2:" << endl;
    	impressao(mat_objeto2);
    	cout << endl;
	
    	mat_objeto1 = mat_objeto2;
	
    	cout << "Fazendo alteracoes..." << endl << endl;
	
    	cout << "Copia da matriz 1, matriz 3:" << endl;
    	impressao(mat_objeto_copia);
    	cout << endl;
    	
	cout << "Matriz 1:" << endl;
    	impressao(mat_objeto1);
    	cout << endl << endl;
   	
	cout << "Matriz 2:" << endl;
    	impressao(mat_objeto2);
    	cout << endl;

	return 0;

}

